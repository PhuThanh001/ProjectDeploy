// <auto-generated />
using System;
using GenZStyleApp.DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GenZStyleApp.DAL.Migrations
{
    [DbContext(typeof(GenZStyleDbContext))]
    partial class GenZStyleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("InboxId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVip")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("StyleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountId");

                    b.HasIndex("StyleId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Account", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Blogger", b =>
                {
                    b.Property<int>("AccountID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AvatarURL")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("datetime");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AccountID");

                    b.ToTable("Blogger", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("PostId");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Image_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsSaved")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("PostId");

                    b.ToTable("Collection", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Comment", b =>
                {
                    b.Property<int>("CommentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentId"), 1L, 1);

                    b.Property<int>("CommentBy")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<int?>("ParentCommentId")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("CommentId");

                    b.HasIndex("CommentBy");

                    b.HasIndex("ParentCommentId");

                    b.HasIndex("PostId");

                    b.ToTable("Comment", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.HashPost", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("HashTageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("PostId", "HashTageId");

                    b.HasIndex("HashTageId");

                    b.ToTable("HashPost", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Hashtag", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Hashtag", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Inbox", b =>
                {
                    b.Property<int>("InboxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InboxId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InboxId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.ToTable("Inbox", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.InboxPaticipant", b =>
                {
                    b.Property<int>("InboxPaticipantId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InboxPaticipantId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("InboxId")
                        .HasColumnType("int");

                    b.HasKey("InboxPaticipantId");

                    b.HasIndex("AccountId");

                    b.HasIndex("InboxId");

                    b.ToTable("InboxPaticipant", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Invoice", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"), 1L, 1);

                    b.Property<int?>("AccountId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<int?>("PackageId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("RechargeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("WalletId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("AccountId");

                    b.HasIndex("PackageId");

                    b.ToTable("Invoice", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Like", b =>
                {
                    b.Property<int>("LikeBy")
                        .HasColumnType("int");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<bool>("isLike")
                        .HasColumnType("bit");

                    b.HasKey("LikeBy", "PostId");

                    b.HasIndex("PostId");

                    b.ToTable("Like", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Message", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("InboxId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime");

                    b.Property<string>("File")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("ReceiverId")
                        .HasColumnType("int");

                    b.Property<bool>("Seen")
                        .HasColumnType("bit");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.HasKey("AccountId", "InboxId");

                    b.HasIndex("InboxId");

                    b.HasIndex("SenderId");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Notification", b =>
                {
                    b.Property<int>("NotificationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("NotificationId");

                    b.HasIndex("AccountId");

                    b.ToTable("Notification", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Package", b =>
                {
                    b.Property<int>("PackageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PackageId"), 1L, 1);

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("IsStatus")
                        .HasColumnType("int");

                    b.Property<string>("PackageName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PackageId");

                    b.ToTable("Package", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.PackageRegistration", b =>
                {
                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<int>("PackageId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AccountId", "PackageId");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageRegistration", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Post", b =>
                {
                    b.Property<int>("PostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PostId"), 1L, 1);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Link")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TotalComment")
                        .HasColumnType("int");

                    b.Property<int>("TotalLike")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateTime")
                        .HasColumnType("datetime");

                    b.HasKey("PostId");

                    b.HasIndex("AccountId");

                    b.ToTable("Post", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("AccuseeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IsStatusReport")
                        .HasColumnType("int");

                    b.Property<int?>("PostId")
                        .HasColumnType("int");

                    b.Property<string>("ReportName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReporterId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("ReporterId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Style", b =>
                {
                    b.Property<int>("StyleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StyleId"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StyleName")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdateAt")
                        .HasColumnType("datetime");

                    b.HasKey("StyleId");

                    b.ToTable("Style", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.StylePost", b =>
                {
                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("StyleId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.HasKey("PostId", "StyleId");

                    b.HasIndex("StyleId");

                    b.ToTable("StylePost", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Token", b =>
                {
                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsRevoked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtID")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(258)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasMaxLength(258)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(258)");

                    b.HasKey("ID");

                    b.ToTable("Token", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("AvatarUrl")
                        .HasMaxLength(2147483647)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Dob")
                        .HasColumnType("datetime");

                    b.Property<bool?>("Gender")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.UserRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FollowerId")
                        .HasColumnType("int");

                    b.Property<int>("FollowingId")
                        .HasColumnType("int");

                    b.Property<bool>("isFollow")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FollowerId");

                    b.ToTable("UserRelation", (string)null);
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Account", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Style", "Style")
                        .WithMany("Accounts")
                        .HasForeignKey("StyleId");

                    b.HasOne("GenZStyleApp.DAL.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("GenZStyleApp.DAL.Models.Account", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Style");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Blogger", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithOne()
                        .HasForeignKey("GenZStyleApp.DAL.Models.Blogger", "AccountID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Category", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Style", "Style")
                        .WithOne("Category")
                        .HasForeignKey("GenZStyleApp.DAL.Models.Category", "CategoryId")
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("Categories")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Collection", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("Collection")
                        .HasForeignKey("PostId")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Category");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Comment", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Comments")
                        .HasForeignKey("CommentBy")
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Comment", "ParentComment")
                        .WithMany("SubComments")
                        .HasForeignKey("ParentCommentId");

                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("ParentComment");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.HashPost", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Hashtag", "Hashtag")
                        .WithMany("HashPosts")
                        .HasForeignKey("HashTageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("HashPosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hashtag");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Inbox", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithOne("Inbox")
                        .HasForeignKey("GenZStyleApp.DAL.Models.Inbox", "AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.InboxPaticipant", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("InboxPaticipants")
                        .HasForeignKey("AccountId")
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Inbox", "Inbox")
                        .WithMany("Paticipants")
                        .HasForeignKey("InboxId")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Inbox");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Invoice", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Invoices")
                        .HasForeignKey("AccountId")
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Package", "Package")
                        .WithMany("Invoices")
                        .HasForeignKey("PackageId")
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Like", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Likes")
                        .HasForeignKey("LikeBy")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Message", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", null)
                        .WithMany("Messageee")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Inbox", "Inbox")
                        .WithMany("Messages")
                        .HasForeignKey("InboxId")
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Account", "AccountSender")
                        .WithMany("Messages")
                        .HasForeignKey("SenderId")
                        .IsRequired();

                    b.Navigation("AccountSender");

                    b.Navigation("Inbox");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Notification", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Notifications")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.PackageRegistration", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("PackageRegistrations")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Package", "Package")
                        .WithMany("PackageRegistrations")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Post", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Posts")
                        .HasForeignKey("AccountId")
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Report", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("Reports")
                        .HasForeignKey("PostId");

                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Reports")
                        .HasForeignKey("ReporterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Post");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.StylePost", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Post", "Post")
                        .WithMany("StylePosts")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GenZStyleApp.DAL.Models.Style", "Style")
                        .WithMany("StylePosts")
                        .HasForeignKey("StyleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("Style");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Token", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("Tokens")
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.User", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.UserRelation", b =>
                {
                    b.HasOne("GenZStyleApp.DAL.Models.Account", "Account")
                        .WithMany("UserRelations")
                        .HasForeignKey("FollowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Account", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Inbox")
                        .IsRequired();

                    b.Navigation("InboxPaticipants");

                    b.Navigation("Invoices");

                    b.Navigation("Likes");

                    b.Navigation("Messageee");

                    b.Navigation("Messages");

                    b.Navigation("Notifications");

                    b.Navigation("PackageRegistrations");

                    b.Navigation("Posts");

                    b.Navigation("Reports");

                    b.Navigation("Tokens");

                    b.Navigation("UserRelations");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Comment", b =>
                {
                    b.Navigation("SubComments");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Hashtag", b =>
                {
                    b.Navigation("HashPosts");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Inbox", b =>
                {
                    b.Navigation("Messages");

                    b.Navigation("Paticipants");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Package", b =>
                {
                    b.Navigation("Invoices");

                    b.Navigation("PackageRegistrations");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Post", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("Collection");

                    b.Navigation("Comments");

                    b.Navigation("HashPosts");

                    b.Navigation("Likes");

                    b.Navigation("Reports");

                    b.Navigation("StylePosts");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.Style", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Category")
                        .IsRequired();

                    b.Navigation("StylePosts");
                });

            modelBuilder.Entity("GenZStyleApp.DAL.Models.User", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
